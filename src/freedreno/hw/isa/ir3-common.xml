<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright Â© 2020 Google, Inc.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice (including the next
paragraph) shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
 -->

<isa>

<!--
	Source Register encoding, used in cat2 and cat4 where a src can be
	either gpr/const/relative
 -->

<bitset name="#multisrc" size="16">
	<doc>
		Encoding for instruction source which can be GPR/CONST/IMMED
		or relative GPR/CONST.
	</doc>
</bitset>

<bitset name="#mulitsrc-immed" extends="#multisrc">
	<display>
		{ABSNEG}{IMMED}
	</display>
	<field name="IMMED" low="0"  high="10" type="int"/>
	<pattern low="11" high="13">100</pattern>
	<field name="ABSNEG" low="14" high="15" type="#absneg"/>
</bitset>

<bitset name="#mulitsrc-immed-flut" extends="#multisrc">
	<doc>
		Immediate with int->float lookup table:

			0  -> 0.0
			1  -> 0.5
			2  -> 1.0
			3  -> 2.0
			4  -> e
			5  -> pi
			6  -> 1/pi
			7  -> 1/log2(e)
			8  -> log2(e)
			9  -> 1/log2(10)
			10 -> log2(10)
			11 -> 4.0

	</doc>
	<display>
		{ABSNEG}{FLUT}
	</display>
	<field name="FLUT" low="0"  high="10" type="#flut"/>
	<pattern low="11" high="13">101</pattern>
	<field name="ABSNEG" low="14" high="15" type="#absneg"/>
</bitset>

<expr name="#multisrc-half">
	<doc>!FULL</doc>
	<var name="FULL"/>
	<not/>
</expr>

<bitset name="#multisrc-gpr" extends="#multisrc">
	<display>
		{ABSNEG}{HALF}r{GPR}.{SWIZ}
	</display>
	<derived name="HALF" expr="#multisrc-half" type="bool" display="h"/>
	<field name="SWIZ" low="0" high="1" type="#swiz"/>
	<field name="GPR" low="2"  high="10" type="uint"/>
	<pattern low="11" high="13">000</pattern>
	<field name="ABSNEG" low="14" high="15" type="#absneg"/>
</bitset>

<bitset name="#multisrc-const" extends="#multisrc">
	<display>
		{HALF}c{CONST}.{SWIZ}
	</display>
	<derived name="HALF" expr="#multisrc-half" type="bool" display="h"/>
	<field name="SWIZ" low="0" high="1" type="#swiz"/>
	<field name="CONST" low="2" high="11" type="uint"/>
	<pattern low="12" high="15">xxx1</pattern>
</bitset>

<bitset name="#multisrc-relative" extends="#multisrc">
	<pattern low="11" high="15">xx001</pattern>
</bitset>

<bitset name="#multisrc-relative-gpr" extends="#multisrc-relative">
	<display>
		{HALF}r&lt;a0.x + {OFFSET}&gt;
	</display>
	<derived name="HALF" expr="#multisrc-half" type="bool" display="h"/>
	<field name="OFFSET" low="0" high="9" type="int"/>
	<pattern pos="10">0</pattern>
</bitset>

<bitset name="#multisrc-relative-const" extends="#multisrc-relative">
	<display>
		{HALF}c&lt;a0.x + {OFFSET}&gt;
	</display>
	<derived name="HALF" expr="#multisrc-half" type="bool" display="h"/>
	<field name="OFFSET" low="0" high="9" type="int"/>
	<pattern pos="10">1</pattern>
</bitset>

<!-- For cat2/cat4, the dst reg is full precision if {FULL} == {DEST_CONV} -->
<expr name="#dest-half">
	<doc>FULL == DST_CONV</doc>
	<var name="DST_CONV"/>
	<var name="FULL"/>
	<eq/>
</expr>

<expr name="#true">
	<literal val="1"/>
</expr>

<expr name="#false">
	<literal val="0"/>
</expr>

<!--
	Enums used in various places:
 -->

<enum name="#rptN">
	<value val="0" display=""/>
	<value val="1" display="(rpt1)"/>
	<value val="2" display="(rpt2)"/>
	<value val="3" display="(rpt3)"/>
	<value val="4" display="(rpt4)"/>
	<value val="5" display="(rpt5)"/>
</enum>

<enum name="#cond">
	<value val="0" display="lt"/>
	<value val="1" display="le"/>
	<value val="2" display="gt"/>
	<value val="3" display="ge"/>
	<value val="4" display="eq"/>
	<value val="5" display="ne"/>
</enum>

<enum name="#swiz">
	<value val="0" display="x"/>
	<value val="1" display="y"/>
	<value val="2" display="z"/>
	<value val="3" display="w"/>
</enum>

<enum name="#type">
	<value val="0" display="f16"/>
	<value val="1" display="f32"/>
	<value val="2" display="u16"/>
	<value val="3" display="u32"/>
	<value val="4" display="s16"/>
	<value val="5" display="s32"/>
	<value val="6" display="u8"/>
	<value val="7" display="s8"/>
</enum>

<enum name="#absneg">
	<value val="0" display=""/>
	<value val="1" display="(neg)"/>
	<value val="2" display="(abs)"/>
	<value val="3" display="(absneg)"/>
</enum>

<enum name="#flut">
	<doc>int to float lookup table</doc>
	<value val="0"  display="(0.0)"/>
	<value val="1"  display="(0.5)"/>
	<value val="2"  display="(1.0)"/>
	<value val="3"  display="(2.0)"/>
	<value val="4"  display="(e)"/>
	<value val="5"  display="(pi)"/>
	<value val="6"  display="(1/pi)"/>
	<value val="7"  display="(1/log2(e))"/>
	<value val="8"  display="(log2(e))"/>
	<value val="9"  display="(1/log2(10))"/>
	<value val="10" display="(log2(10))"/>
	<value val="11" display="(4.0)"/>
</enum>

</isa>
